{"version":3,"sources":["main/webapp/views/charts/MainChartExample.js","main/webapp/views/dashboard/Dashboard.js"],"names":["brandSuccess","getStyle","brandInfo","brandDanger","MainChartExample","attributes","random","min","max","Math","floor","defaultDatasets","data1","data2","data3","i","push","label","backgroundColor","hexToRgba","borderColor","pointHoverBackgroundColor","borderWidth","data","borderDash","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","gridLines","drawOnChartArea","yAxes","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","elements","point","radius","hitRadius","hoverRadius","hoverBorderWidth","datasets","options","labels","WidgetsDropdown","lazy","Dashboard","sm","id","className","color","name","map","value","active","style","height","marginTop","md","precision"],"mappings":"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","file":"static/js/22.42dadd6c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\nimport { getStyle, hexToRgba } from '@coreui/utils'\r\n\r\nconst brandSuccess = getStyle('success') || '#4dbd74'\r\nconst brandInfo = getStyle('info') || '#20a8d8'\r\nconst brandDanger = getStyle('danger') || '#f86c6b'\r\n\r\nconst MainChartExample = attributes => {\r\n  const random = (min, max)=>{\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n  }\r\n\r\n  const defaultDatasets = (()=>{\r\n    let elements = 27\r\n    const data1 = []\r\n    const data2 = []\r\n    const data3 = []\r\n    for (let i = 0; i <= elements; i++) {\r\n      data1.push(random(50, 200))\r\n      data2.push(random(80, 100))\r\n      data3.push(65)\r\n    }\r\n    return [\r\n      {\r\n        label: 'My First dataset',\r\n        backgroundColor: hexToRgba(brandInfo, 10),\r\n        borderColor: brandInfo,\r\n        pointHoverBackgroundColor: brandInfo,\r\n        borderWidth: 2,\r\n        data: data1\r\n      },\r\n      {\r\n        label: 'My Second dataset',\r\n        backgroundColor: 'transparent',\r\n        borderColor: brandSuccess,\r\n        pointHoverBackgroundColor: brandSuccess,\r\n        borderWidth: 2,\r\n        data: data2\r\n      },\r\n      {\r\n        label: 'My Third dataset',\r\n        backgroundColor: 'transparent',\r\n        borderColor: brandDanger,\r\n        pointHoverBackgroundColor: brandDanger,\r\n        borderWidth: 1,\r\n        borderDash: [8, 5],\r\n        data: data3\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    return {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display: false\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n            gridLines: {\r\n              drawOnChartArea: false\r\n            }\r\n          }],\r\n          yAxes: [{\r\n            ticks: {\r\n              beginAtZero: true,\r\n              maxTicksLimit: 5,\r\n              stepSize: Math.ceil(250 / 5),\r\n              max: 250\r\n            },\r\n            gridLines: {\r\n              display: true\r\n            }\r\n          }]\r\n        },\r\n        elements: {\r\n          point: {\r\n            radius: 0,\r\n            hitRadius: 10,\r\n            hoverRadius: 4,\r\n            hoverBorderWidth: 3\r\n          }\r\n        }\r\n      }\r\n    }\r\n  )()\r\n\r\n  // render\r\n  return (\r\n    <CChartLine\r\n      {...attributes}\r\n      datasets={defaultDatasets}\r\n      options={defaultOptions}\r\n      labels={['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su']}\r\n    />\r\n  )\r\n}\r\n\r\n\r\nexport default MainChartExample\r\n","import React, { lazy } from 'react'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CProgress,\r\n  CRow,\r\n  CCallout\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport MainChartExample from '../charts/MainChartExample.js'\r\n\r\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\r\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <>\r\n      <WidgetsDropdown />\r\n      <CCard>\r\n        <CCardBody>\r\n          <CRow>\r\n            <CCol sm=\"5\">\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">OVC</h4>\r\n              <div className=\"small text-muted\">March 2021</div>\r\n            </CCol>\r\n            <CCol sm=\"7\" className=\"d-none d-md-block\">\r\n              <CButton color=\"primary\" className=\"float-right\">\r\n                <CIcon name=\"cil-cloud-download\"/>\r\n              </CButton>\r\n              <CButtonGroup className=\"float-right mr-3\">\r\n                {\r\n                  ['Day', 'Month', 'Year'].map(value => (\r\n                    <CButton\r\n                      color=\"outline-secondary\"\r\n                      key={value}\r\n                      className=\"mx-0\"\r\n                      active={value === 'Month'}\r\n                    >\r\n                      {value}\r\n                    </CButton>\r\n                  ))\r\n                }\r\n              </CButtonGroup>\r\n            </CCol>\r\n          </CRow>\r\n          <MainChartExample style={{height: '300px', marginTop: '40px'}}/>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CRow className=\"text-center\">\r\n            <CCol md sm=\"12\" className=\"mb-sm-2 mb-0\">\r\n              <div className=\"text-muted\">Visits</div>\r\n              <strong>29.703 Users (40%)</strong>\r\n              <CProgress\r\n                className=\"progress-xs mt-2\"\r\n                precision={1}\r\n                color=\"success\"\r\n                value={40}\r\n              />\r\n            </CCol>\r\n            <CCol md sm=\"12\" className=\"mb-sm-2 mb-0 d-md-down-none\">\r\n              <div className=\"text-muted\">Unique</div>\r\n              <strong>24.093 Users (20%)</strong>\r\n              <CProgress\r\n                className=\"progress-xs mt-2\"\r\n                precision={1}\r\n                color=\"info\"\r\n                value={40}\r\n              />\r\n            </CCol>\r\n            <CCol md sm=\"12\" className=\"mb-sm-2 mb-0\">\r\n              <div className=\"text-muted\">Pageviews</div>\r\n              <strong>78.706 Views (60%)</strong>\r\n              <CProgress\r\n                className=\"progress-xs mt-2\"\r\n                precision={1}\r\n                color=\"warning\"\r\n                value={40}\r\n              />\r\n            </CCol>\r\n            <CCol md sm=\"12\" className=\"mb-sm-2 mb-0\">\r\n              <div className=\"text-muted\">New Users</div>\r\n              <strong>22.123 Users (80%)</strong>\r\n              <CProgress\r\n                className=\"progress-xs mt-2\"\r\n                precision={1}\r\n                color=\"danger\"\r\n                value={40}\r\n              />\r\n            </CCol>\r\n            <CCol md sm=\"12\" className=\"mb-sm-2 mb-0 d-md-down-none\">\r\n              <div className=\"text-muted\">Bounce Rate</div>\r\n              <strong>Average Rate (40.15%)</strong>\r\n              <CProgress\r\n                className=\"progress-xs mt-2\"\r\n                precision={1}\r\n                value={40}\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        </CCardFooter>\r\n      </CCard>\r\n\r\n\r\n     \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"],"sourceRoot":""}